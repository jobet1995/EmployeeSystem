name: CI/CD Pipeline

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  setup:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
      run: echo "Checked out code from repository"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Ensure Node.js version 15 or higher
      run: echo "Node.js setup complete"

    - name: Install dependencies
      run: |
        echo "Installing project dependencies..."
        npm ci
        echo "Dependencies installed"

  lint:

    runs-on: ubuntu-latest

    needs: setup

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
      run: echo "Checked out code from repository"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Ensure Node.js version 15 or higher
      run: echo "Node.js setup complete"

    - name: Install dependencies
      run: |
        echo "Installing project dependencies..."
        npm ci
        echo "Dependencies installed"

    - name: Run linters
      run: |
        echo "Running linters..."
        npm run lint
        echo "Linting complete"

  test:

    runs-on: ubuntu-latest

    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
      run: echo "Checked out code from repository"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Ensure Node.js version 15 or higher
      run: echo "Node.js setup complete"

    - name: Install dependencies
      run: |
        echo "Installing project dependencies..."
        npm ci
        echo "Dependencies installed"

    - name: Run tests
      run: |
        echo "Running tests..."
        npm test
        echo "Tests complete"

  build:

    runs-on: ubuntu-latest

    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
      run: echo "Checked out code from repository"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Ensure Node.js version 15 or higher
      run: echo "Node.js setup complete"

    - name: Install dependencies
      run: |
        echo "Installing project dependencies..."
        npm ci
        echo "Dependencies installed"

    - name: Build the project
      run: |
        echo "Building the project..."
        npm run build
        echo "Project build complete"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/
      run: echo "Build artifacts uploaded"

  deploy:

    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
      run: echo "Checked out code from repository"

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      run: echo "SSH agent setup complete"

    - name: Deploy to server
      uses: appleboy/ssh-action@v0.1.1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "Starting deployment..."
          rm -rf /var/www/html/*
          echo "Old files removed from server"
          scp -r dist/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/html/
          echo "New build files copied to server"
          systemctl restart nginx
          echo "Server restarted"
      run: echo "Deployment complete"

  automation:

    runs-on: ubuntu-latest

    needs: deploy

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
      run: echo "Checked out code from repository"

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Ensure Node.js version 15 or higher
      run: echo "Node.js setup complete"

    - name: Install dependencies
      run: |
        echo "Installing project dependencies..."
        npm ci
        echo "Dependencies installed"

    - name: Run automation checks
      run: |
        echo "Running automation checks..."
        if [ -d "dist" ]; then
          echo "Build directory exists"
        else
          echo "Build directory not found"
          exit 1
        fi
        if [ -f "dist/index.html" ]; then
          echo "Build output verified"
        else
          echo "Build output missing"
          exit 1
        fi
        echo "Automation checks complete"
